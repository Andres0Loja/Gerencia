
package ec.edu.ups.soap;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.18
 * 2021-02-15T02:39:09.631-05:00
 * Generated source version: 2.7.18
 * 
 */
public final class Sirve_SirvePort_Client {

    private static final QName SERVICE_NAME = new QName("http://SOAP.ups.edu.ec/", "sirveService");

    private Sirve_SirvePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = SirveService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SirveService ss = new SirveService(wsdlURL, SERVICE_NAME);
        Sirve port = ss.getSirvePort();  
        
        {
        System.out.println("Invoking suma...");
        double _suma_arg0 = 0.0;
        double _suma_arg1 = 0.0;
        double _suma__return = port.suma(_suma_arg0, _suma_arg1);
        System.out.println("suma.result=" + _suma__return);


        }
        {
        System.out.println("Invoking multiplicacion...");
        double _multiplicacion_arg0 = 0.0;
        double _multiplicacion_arg1 = 0.0;
        double _multiplicacion__return = port.multiplicacion(_multiplicacion_arg0, _multiplicacion_arg1);
        System.out.println("multiplicacion.result=" + _multiplicacion__return);


        }
        {
        System.out.println("Invoking divicion...");
        double _divicion_arg0 = 0.0;
        double _divicion_arg1 = 0.0;
        double _divicion__return = port.divicion(_divicion_arg0, _divicion_arg1);
        System.out.println("divicion.result=" + _divicion__return);


        }
        {
        System.out.println("Invoking resta...");
        double _resta_arg0 = 0.0;
        double _resta_arg1 = 0.0;
        double _resta__return = port.resta(_resta_arg0, _resta_arg1);
        System.out.println("resta.result=" + _resta__return);


        }

        System.exit(0);
    }

}
